
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containerlogs
          __path__: /var/lib/docker/containers/*/*-json.log

    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*))/(?P<container_id>(?:[^|]*))
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
          container_id:
      - output:
          source: output

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog

  # Application specific logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          __path__: /var/log/nginx/*.log

  # Journal logs
  - job_name: journal
    journal:
      max_age: 12h
      labels:
        job: systemd-journal
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
      - source_labels: ['__journal__boot_id']
        target_label: 'boot_id'
      - source_labels: ['__journal__transport']
        target_label: 'transport'
      - source_labels: ['__journal_priority_keyword']
        target_label: 'level'

  # Custom application logs
  - job_name: aquila-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: aquila-backend
          __path__: /var/log/aquila/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            level: level
            message: message
            timestamp: timestamp
            service: service
      - labels:
          level:
          service:
      - timestamp:
          format: RFC3339
          source: timestamp

  - job_name: aquila-frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: aquila-frontend
          __path__: /var/log/aquila/frontend/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?P<level>\w+) (?P<message>.*)'
      - timestamp:
          format: '2006-01-02 15:04:05'
          source: timestamp
      - labels:
          level:

  # AWS CloudWatch logs (if using CloudWatch agent)
  - job_name: cloudwatch
    static_configs:
      - targets:
          - localhost
        labels:
          job: cloudwatch
          __path__: /aws/cloudwatch/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            source: source
      - timestamp:
          format: RFC3339
          source: timestamp
      - labels:
          level:
          source:
